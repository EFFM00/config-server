server:
  port: ${PORT:${SERVER_PORT:0}}

spring:
  application:
    name: api-catalog

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceURL:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${random.int}

management:
  endpoints:
    web:
      exposure:
        include: info
  info:
    env:
      enabled: true

info:
  app:
    name: api-catalog
    description: Movies Catalog



# Se decidi√≥ implementar el circuit breaker en movies ya que 2 de los 3 microservicios dependen de movies.


resilience4j.circuitbreaker:
  instances:
    subscriptionMovie:
      allowHealthIndicatorToFail: false
      registerHealthIndicator: true
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 5
      failureRateThreshold: 50
      waitDurationInOpenState: 50s
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      minimumNumberOfCalls: 20
      eventConsumerBufferSize: 10

  retry:
    instances:
      subscriptionMovie:
        maxAttempts: 3
        waitDuration: 1000
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOExceptionretryExceptions
          - feign.FeignException$InternalServerError